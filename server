const express = require('express');
const fs = require('fs');
const path = require('path');
const app = express();
const PORT = 3000;

app.use(express.json());
app.use(express.static('public'));

const dataFile = path.join(__dirname, 'contacts.json');

// Read contacts
function readContacts() {
  if (!fs.existsSync(dataFile)) return [];
  return JSON.parse(fs.readFileSync(dataFile));
}

// Write contacts
function writeContacts(data) {
  fs.writeFileSync(dataFile, JSON.stringify(data, null, 2));
}

// API Routes
app.get('/api/contacts', (req, res) => {
  res.json(readContacts());
});

app.post('/api/contacts', (req, res) => {
  const contacts = readContacts();
  const { name, email, phone } = req.body;
  if (!name || !email || !phone) {
    return res.status(400).json({ message: "All fields required" });
  }
  const newContact = { id: Date.now(), name, email, phone };
  contacts.push(newContact);
  writeContacts(contacts);
  res.status(201).json(newContact);
});

app.put('/api/contacts/:id', (req, res) => {
  const contacts = readContacts();
  const id = parseInt(req.params.id);
  const index = contacts.findIndex(c => c.id === id);
  if (index === -1) return res.status(404).json({ message: "Not found" });
  contacts[index] = { ...contacts[index], ...req.body };
  writeContacts(contacts);
  res.json(contacts[index]);
});

app.delete('/api/contacts/:id', (req, res) => {
  const contacts = readContacts();
  const id = parseInt(req.params.id);
  const updated = contacts.filter(c => c.id !== id);
  writeContacts(updated);
  res.json({ message: "Contact deleted" });
});

app.listen(PORT, () => console.log(`ðŸš€ Server running on http://localhost:${PORT}`));
